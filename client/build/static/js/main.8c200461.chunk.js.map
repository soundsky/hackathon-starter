{"version":3,"sources":["utils/axiosWithAuth.js","components/TracksPage.js","components/SignupForm.js","components/LoginForm.js","components/NavbarHeader.js","components/PlaylistsView.js","components/HomePage.js","App.js","index.js"],"names":["axiosWithAuth","token","localStorage","getItem","axios","create","headers","authorization","TracksView","props","useState","tracks","setTracks","list","setList","useEffect","get","then","response","console","log","data","authorized","catch","error","className","Table","striped","bordered","hover","map","l","track","artist","t","CardDeck","Card","key","_id","inline","style","display","flexDirection","Body","Title","Text","Button","onClick","id","post","res","err","SignupForm","firstName","lastName","email","password","credentials","setCredentials","isFetching","setIsFetching","handleChanges","event","target","name","value","history","useHistory","onSubmit","preventDefault","saved","push","alert","type","placeholder","onChange","required","LoginForm","setError","setItem","msg","NavbarHeader","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Form","FormControl","variant","PlaylistsView","playlist","duration","songInfo","song","title","album","genre","HomePage","Container","Row","Col","xs","inverse","CardImg","width","src","alt","CardImgOverlay","CardTitle","App","exact","path","component","TracksPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c200461.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n    const token = localStorage.getItem('token');\n\n    return axios.create({\n        headers: {\n            authorization: token\n        }\n    });\n};","import React, { useState, useEffect } from 'react';\nimport { Table, CardDeck, Card, Button } from 'react-bootstrap';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nconst TracksView = (props) => {\n    const [tracks, setTracks] = useState([]);\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        axiosWithAuth()\n            .get('/tracks')\n            .then(response => {\n                console.log(response);\n                if (response.data.authorized) {\n                    setTracks(response.data.tracks)\n                }\n            })\n            .catch(error => console.log(error));\n    }, [])\n\n    const handleChanges = e => {\n        setList({ ...list, [e.target.name]: e.target.value });\n        console.log('list', list);\n    }\n\n    const postSong = id => {\n        // e.preventDefault();\n        axiosWithAuth()\n            .post('/postSong', {id})\n            .then(res => {\n                setList(res.data);\n                console.log(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"playlist-cont\">\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            {/* <th>#</th> */}\n                            <th>Track</th>\n                            <th>Artist</th>\n                        </tr>\n                    </thead>\n                    {list.map((l) =>\n                        <tbody>\n                            <tr>\n                                {/* <td>1</td> */}\n                                <td>{l.track}</td>\n                                <td>{l.artist}</td>\n                            </tr>\n                        </tbody>\n                    )}\n                </Table>\n            {tracks.map((t) =>\n                <CardDeck>\n                    <Card key={t._id} inline style={{ display: 'flex', flexDirection: 'row' }}>\n                        <Card.Body>\n                            <Card.Title>Track: {t.track}</Card.Title>\n                            <Card.Text>Artist: {t.artist}</Card.Text>\n                        </Card.Body>\n                        <Button onClick={() => { postSong(t._id) }}>Add to playlist</Button>\n                    </Card>\n                </CardDeck>\n            )}\n        </div>\n    )\n}\n\nexport default TracksView","import React, { useState } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\n\nconst SignupForm = () => {\n    // Set initial state for credentials and fetch check\n    const [credentials, setCredentials] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n    })\n    const [isFetching, setIsFetching] = useState(false);\n\n    // Sets credentials to it's state\n    const handleChanges = event => {\n        setCredentials(\n            { ...credentials, [event.target.name]: event.target.value }\n        )\n        console.log('New credentials from SignupForm', credentials);\n    }\n\n    // Post credentials to local storage token\n    let history = useHistory();\n    const signup = event => {\n        event.preventDefault();\n        setIsFetching(true);\n        axiosWithAuth()\n            .post('/signup', credentials)\n            .then(response => {\n                console.log(response.data);\n                response.data.saved===true ? history.push('/login') : alert(\"This account has already been created.\");\n            })\n            .catch(error => console.log(error));\n    }\n\n\n    return (\n        <div>\n            <form name=\"signupForm\" onSubmit={signup}>\n                <input\n                    type=\"firstName\"\n                    name=\"firstName\"\n                    placeholder=\"First Name\"\n                    value={credentials.firstName}\n                    onChange={handleChanges}\n                    required\n                />\n                <input\n                    type=\"lastName\"\n                    name=\"lastName\"\n                    placeholder=\"Last Name\"\n                    value={credentials.lastName}\n                    onChange={handleChanges}\n                    required\n                />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={credentials.email}\n                    onChange={handleChanges}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={credentials.password}\n                    onChange={handleChanges}\n                    required\n                />\n                <button>Sign up</button>\n                {isFetching && 'Signing up...'}\n            </form>\n        </div>\n    )\n}\n\nexport default SignupForm;","import React, { useState } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\n\n\nconst LoginForm = () => {\n    // Set initial state for credentials and fetch check\n    const [credentials, setCredentials] = useState({\n        email: \"\",\n        password: \"\"\n    })\n    const [isFetching, setIsFetching] = useState(false);\n    const [error, setError] = useState(\"\")\n\n    // Sets credentials to it's state\n    const handleChanges = event => {\n        setCredentials(\n            { ...credentials, [event.target.name]: event.target.value }\n        )\n        console.log('New credentials from LoginForm', credentials);\n    }\n\n    // Post credentials to local storage token\n    let history = useHistory();\n    const login = event => {\n        event.preventDefault();\n        setIsFetching(true);\n        axiosWithAuth()\n            .post('/login', credentials)\n            .then(response => {\n                console.log(response.data);\n                if (response.data.token) {\n                    localStorage.setItem(\"token\", response.data.token);\n                    history.push('/tracks');\n                } else {\n                    setError(response.data.msg)\n                }\n\n            })\n            .catch(error => console.log(error));\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={login}>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={credentials.email}\n                    onChange={handleChanges}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={credentials.password}\n                    onChange={handleChanges}\n                    required\n                />\n                <button>Log in</button>\n                {isFetching && 'Logging in...'}\n            </form>\n            <p>{error ? error : null}</p>\n        </div>\n    )\n}\n\n\n\nexport default LoginForm;","import React from 'react';\nimport { Navbar, Nav, Form, FormControl, FormGroup, Button } from 'react-bootstrap';\n// import { NavLink } from 'reactstrap';\n// import { Link } from 'react-router-dom';\n// import NavbarToggler from 'reactstrap/lib/NavbarToggler';\n\n\nexport default function NavbarHeader() {\n\n    return (\n        <div>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Soundsky</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/tracks\">Tracks</Nav.Link>\n                        <Nav.Link href=\"/playlists\">Playlists</Nav.Link>\n                        {/* <Nav.Link href=\"/login\">Log in</Nav.Link>\n                        <Nav.Link href=\"/signup\">Sign up</Nav.Link> */}\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n\n\n\n\n\n            {/* <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Soundsky</Navbar.Brand>\n                <FormGroup>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                </FormGroup>{' '}\n\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/tracks\">Tracks</Nav.Link>\n                        <Nav.Link href=\"/signup\">Signup</Nav.Link>\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                <Form inline>\n                    <FormGroup>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    </FormGroup>{' '}\n                    <FormGroup>\n                        <Button variant=\"outline-success\">Search</Button>\n                    </FormGroup>{' '}\n                </Form>\n            </Navbar> */}\n        </div>\n    )\n}\n\n","import React, { useState, useEffect } from 'react';\n\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nimport TracksPage from './TracksPage';\n\nconst PlaylistsView = props => {\n    // Setting state for song information and playlist\n    const [playlist, setPlaylist] = useState([]);\n    const [songInfo, setSongInfo] = useState({\n        track: \"\",\n        artist: \"\",\n        duration: \"\",\n        _id: \"\"\n    });\n\n    // GET song data\n    useEffect(() => {\n        axiosWithAuth()\n            .get('/playlist')\n            .then(res => {\n                console.log(res.data);\n                // setPlaylist(res.data);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    console.log(songInfo);\n\n    return (\n        <div>\n            {playlist.map(song => (\n                <p key={song.id}>\n                Song Title: {song.title} | \n                Artist: {song.artist} | \n                Album: {song.album} | \n                Duration: {song.duration} | \n                Genre: {song.genre}\n                </p>\n            ))}\n        </div>\n    );\n}\n\nexport default PlaylistsView;","import React from 'react';\nimport { Container, Row, Col, Card, CardImg, Button } from 'react-bootstrap';\nimport { CardTitle, CardImgOverlay } from 'reactstrap';\n\nconst HomePage = () => {\n    return (\n        <Container>\n            <Row>\n                <Col xs=\"4\">\n                    <Card inverse>\n                        <CardImg width=\"100%\" src=\"https://images.pexels.com/photos/761963/pexels-photo-761963.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" alt=\"Card image cap\" />\n                        <CardImgOverlay>\n                            <CardTitle>Melodic</CardTitle>\n                        </CardImgOverlay>\n                    </Card>\n                    <Card inverse>\n                        <CardImg width=\"100%\" src=\"https://images.pexels.com/photos/1337753/pexels-photo-1337753.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"Card image cap\" />\n                        <CardImgOverlay>\n                            <CardTitle>Melodic</CardTitle>\n                        </CardImgOverlay>\n                    </Card>\n                </Col>\n                <Col xs=\"8\">\n                    <h1>Welcome to Soundsky</h1>\n                    <br />\n                    <Button href=\"/login\" variant=\"secondary\" inverse style={{width:\"30%\"}}>Log in</Button>\n                    <br />\n                    <br />\n                    <Button href=\"/signup\" variant=\"secondary\" inverse style={{width:\"30%\"}}>Sign up</Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n\nexport default HomePage;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import { Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport Axios from 'axios';\nimport TracksPage from './components/TracksPage'\n// Components\nimport PrivateRoute from './components/PrivateRoute';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nimport NavbarHeader from './components/NavbarHeader';\nimport PlaylistsView from './components/PlaylistsView';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  // useEffect(() => {\n  //   const post = async () => {\n  //     try {\n  //       const res = await Axios.post(\"/signup\")\n\n  //       console.log('res.data', res.data)\n\n  //     } catch (error) {\n  //       console.log('res.data error', error)\n  //     }\n  //   }\n  //   post()\n  // }, [])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavbarHeader />\n        {/* <TracksPage/> */}\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/tracks' component={TracksPage} />\n          {/* <PrivateRoute exact path='/protected' component={PlaylistsView} /> */}\n          <Route path='/login' component={LoginForm} />\n          <Route path='/playlists' component={PlaylistsView} />\n          <Route path='/signup' component={SignupForm} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}